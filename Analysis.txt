Task 0:
    Since under the hood of python list there is C-array, it takes O(1) to access the elements


Task 1:
    O(n) because we need to run through all records and add them to the set

    Details:
        2 x checkRecords: O(2n)
        count ==> O(len(u1) + len(u2))


Task 2:
    O(n) because functions are run through the list of calls.
    Access to dict via key should take O(1)


Task 3:
    O(nlogn) due to sorting.

    Details:
        extractCode() and isFrom() are O(1)
        getCalled() is O(n) because it iterates through all calls

        there is a set created from the list to get unique values. It takes O(n)
        than it is converted back to the list because we want to sort uniques values (set is unordered). It takes O(n)
        And finally we sort the list which takes O(nlogn) because time sort is used

        Printing also takes O(n) because it iterates through the list


Task 4:
    Iteration, e.g for v in l:
    Complexity: O(n)
    
    Containment operation, e.g x in/not in l
    Complexity: O(n)

    Index operation, e.g l[i]
    Complexity: O(1)

    Append operation, e.g l.append(5)
    Complexity: O(1)

    Time Complexity: O(n^2)
    Space Complexity: O(n)

